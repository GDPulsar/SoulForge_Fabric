plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name "KosmX's maven"
		url 'https://maven.kosmx.dev/'
	}
	maven {
		name = 'GeckoLib'
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
	maven { url "https://maven.shedaniel.me" }
	maven { url "https://maven.wispforest.io" }
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		url "https://jitpack.io"
	}
	maven { url "https://maven.ryanliptak.com/" }
	mavenLocal()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.3.2")))

	include(modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cca_version}"))
	include(modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cca_version}"))
	include(modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-world:${cca_version}"))

	include modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim}")
	include modRuntimeOnly("io.github.kosmx.bendy-lib:bendy-lib-fabric:${project.bendylib_version}")

	include(modImplementation('software.bernie.geckolib:geckolib-fabric-1.20.1:4.2.2'))

	modImplementation "org.ladysnake:satin:${satin_version}"
	include "org.ladysnake:satin:${satin_version}"

	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:12.0.684"
	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:12.0.684"

	include modImplementation("com.jamieswhiteshirt:reach-entity-attributes:2.4.0")

	include modImplementation("com.github.0x3C50:Renderer:2273f5e")

	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")

	//modCompileOnly("com.github.GDPulsar:SoulForge-Teams:-SNAPSHOT")
	//modLocalRuntime("com.github.GDPulsar:SoulForge-Teams:-SNAPSHOT")
	modCompileOnly("com.pulsar.soulforge_teams:soulforge-teams-1.20.1:1.0.2")
	//modLocalRuntime("com.pulsar.soulforge_teams:soulforge-teams-1.20.1:1.0.2")
	modCompileOnly("squeek.appleskin:appleskin-fabric:${appleskin_version}") {
		transitive = false
	}
	//modLocalRuntime("squeek.appleskin:appleskin-fabric:${appleskin_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

loom {
	accessWidenerPath = file("src/main/resources/soulforge.accesswidener")
	runs {
		seperateServer {
			inherit server
			name "Seperate Server"
			runDir "runServer"
		}

		seperateClient {
			inherit client
			name "Seperate Client"
			runDir "runAlt"
		}
	}
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}